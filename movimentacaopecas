// Movimentação de peças de xadrez (Nível Mestre)
// Aluna: Larissa Severo de Faria

#include <stdio.h>

// Funções para simular os movimentos

// Move a Torre usando recursividade
void moverTorre(int casas) {
    if (casas > 0) {
        printf("Direita\n");
        moverTorre(casas - 1);
    }
}

// Move o Bispo com recursividade
void moverBispo(int casas) {
    if (casas > 0) {
        printf("Cima, Direita\n");
        moverBispo(casas - 1);
    }
}

// Move a Rainha com recursividade
void moverRainha(int casas) {
    if (casas > 0) {
        printf("Esquerda, Baixo\n");
        moverRainha(casas - 1);
    }
}

// --- Funções com Loops ---

// Move o Cavalo em "L"
void moverCavalo() {
    printf("--- Movimento do Cavalo ---\n");

    // Anda duas casas para cima
    for (int a = 0; a < 2; a++) {
        printf("Cima\n");
    }

    // E uma para a direita
    for (int b = 0; b < 1; b++) {
        printf("Direita\n");
    }
}

// Move o Bispo com loops aninhados
void moverBispoLoops(int casas) {
    printf("--- Movimento do Bispo (Loops Aninhados) ---\n");
    
    // Loop para cada passo
    for (int c = 0; c < casas; c++) {
        // Movimento do passo
        for (int d = 0; d < 1; d++) {
            printf("Cima, Direita\n");
        }
    }
}

// Função principal que executa tudo
int main() {
    int numCasas = 5;

    printf("--- Movimento da Torre (Recursividade) ---\n");
    moverTorre(numCasas);
    printf("\n");

    printf("--- Movimento do Bispo (Recursividade) ---\n");
    moverBispo(numCasas);
    printf("\n");

    printf("--- Movimento da Rainha (Recursividade) ---\n");
    moverRainha(numCasas);
    printf("\n");
    
    moverCavalo();
    printf("\n");

    moverBispoLoops(numCasas);
    printf("\n");

    return 0;
}
